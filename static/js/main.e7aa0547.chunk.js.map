{"version":3,"sources":["utils/constants.js","utils/utilis.js","Context/ChmodContext.js","Components/Input/Input.js","Components/CheckBox/CheckBox.js","Components/CheckBoxContainer/CheckBoxContainer.js","App.js","serviceWorker.js","index.js"],"names":["fileModeMap","0","1","2","3","4","5","6","7","checkChmod","val","test","fileMode","split","forEach","current","push","join","symbolicVal","match","octalMode","objKeys","Object","keys","cur","find","key","ChmodContext","React","createContext","octal","props","useContext","setOctal","symbolic","setSymbolic","symbolicDir","setSymbolicDir","ownerPerms","groupPerms","otherPerms","name","isOctal","value","readOnly","placeholder","useEffect","newValue","toString","length","total","console","log","Fragment","htmlFor","type","pattern","className","onChange","e","target","CheckBox","enabled","useState","checked","setChecked","setOwnerPerms","setGroupPerms","setOtherPerms","getPerms","Error","setPerms","negative","newVal","perms","CheckBoxContainer","weight","ownerElements","rwx","map","i","groupElements","otherElements","App","Input","Boolean","window","location","hostname","ReactDOM","render","children","read","write","execute","store","Provider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e7aa0547.chunk.js","sourcesContent":["export const fileModeMap = {\n    0: '---',\n    1: '--x',\n    2: '-w-',\n    3: '-wx',\n    4: 'r--',\n    5: 'r-x',\n    6: 'rw-',\n    7: 'rwx'\n};","import { fileModeMap } from \"./constants\";\n\nexport const checkChmod = val => {\n  if (/\\d/.test(val)) {\n    val = val + \"\";\n    const fileMode = [];\n    const newVal = val.split(\"\");\n    newVal.forEach(function(current) {\n      if (current <= 7) {\n        fileMode.push(fileModeMap[current]);\n      }\n    });\n    return fileMode.join(\"\");\n  } else if (val !== \"\") {\n    const symbolicVal = val.match(/.{1,3}/g);\n    const octalMode = [];\n    const objKeys = Object.keys(fileModeMap);\n    symbolicVal.forEach(cur => {\n      octalMode.push(objKeys.find(key => fileModeMap[key] === cur));\n    });\n    return octalMode.join(\"\");\n  }\n  return val;\n};\n","import React from \"react\";\nimport { checkChmod } from \"../utils/utilis\";\n\nexport const ChmodContext = React.createContext({ octal: \"octal\" });\n\nexport const ChmodContextProvider = ({ children }) => {\n  const [octal, setOctal] = React.useState(777);\n  const [symbolic, setSymbolic] = React.useState(`-${checkChmod(777)}`);\n  const [symbolicDir, setSymbolicDir] = React.useState(`d${checkChmod(777)}`);\n  const [ownerPerms, setOwnerPerms] = React.useState({\n    rwx: {\n      read: 4,\n      write: 2,\n      execute: 1\n    },\n    total: 7\n  });\n\n  const [groupPerms, setGroupPerms] = React.useState({\n    rwx: {\n      read: 4,\n      write: 2,\n      execute: 1\n    },\n    total: 7\n  });\n\n  const [otherPerms, setOtherPerms] = React.useState({\n    rwx: {\n      read: 4,\n      write: 2,\n      execute: 1\n    },\n    total: 7\n  });\n\n  const store = {\n    octal,\n    setOctal,\n    symbolic,\n    setSymbolic,\n    symbolicDir,\n    setSymbolicDir,\n    ownerPerms,\n    setOwnerPerms,\n    groupPerms,\n    setGroupPerms,\n    otherPerms,\n    setOtherPerms\n  };\n  return (\n    <ChmodContext.Provider value={store}>{children}</ChmodContext.Provider>\n  );\n};\n","import React, { useEffect } from \"react\";\n\nimport { ChmodContext } from \"../../Context/ChmodContext\";\nimport { checkChmod } from \"../../utils/utilis\";\n\nexport default props => {\n  const {\n    octal,\n    setOctal,\n    symbolic,\n    setSymbolic,\n    symbolicDir,\n    setSymbolicDir,\n    ownerPerms,\n    groupPerms,\n    otherPerms\n  } = React.useContext(ChmodContext);\n  const { name } = props;\n  const isOctal = name === \"octal\";\n  const value = isOctal ? octal : name === \"symbolic\" ? symbolic : symbolicDir;\n  const readOnly = name === \"symbolicDir\";\n  const placeholder = isOctal ? 777 : checkChmod(777);\n\n  useEffect(() => {\n    const newValue = value.toString().split(\"\");\n    if (newValue.length < 4) {\n      newValue[0] = ownerPerms.total;\n      setOctal(newValue.join(\"\"));\n    }\n  }, [ownerPerms, value, setOctal]);\n\n  useEffect(() => {\n    const newValue = value.toString().split(\"\");\n    if (newValue.length < 4) {\n      newValue[1] = groupPerms.total;\n      setOctal(newValue.join(\"\"));\n    }\n  }, [groupPerms, value, setOctal]);\n\n  useEffect(() => {\n    const newValue = value.toString().split(\"\");\n    if (newValue.length < 4) {\n      newValue[2] = otherPerms.total;\n      setOctal(newValue.join(\"\"));\n    }\n  }, [otherPerms, value, setOctal]);\n\n  useEffect(() => {\n    setSymbolic(`-${checkChmod(octal)}`);\n    setSymbolicDir(`d${checkChmod(octal)}`);\n  }, [symbolic, octal, setSymbolic, setSymbolicDir]);\n\n  const onChangeHandler = e => {\n    if (isOctal) {\n      setOctal(e.target.value);\n      setSymbolic(`-${checkChmod(e.target.value)}`);\n      setSymbolicDir(`d${checkChmod(e.target.value)}`);\n    } else {\n      setSymbolic(e.target.value);\n      setOctal(checkChmod(e.target.value));\n      setSymbolicDir(`d${e.target.value}`);\n    }\n  };\n\n  console.log(React.useContext(ChmodContext));\n  return (\n    <React.Fragment>\n      <label htmlFor={name}>\n        {name}{\" \"}\n        <input\n          type=\"text\"\n          pattern={isOctal ? \"[0-9]\" : \"[wrx]\"}\n          className=\"rounded\"\n          name={name}\n          onChange={onChangeHandler}\n          placeholder={placeholder}\n          value={value}\n          readOnly={readOnly}\n        />\n      </label>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\nimport { ChmodContext } from \"../../Context/ChmodContext\";\n\nexport const CheckBox = props => {\n  const { name, enabled, value, type } = props;\n  const [checked, setChecked] = React.useState(enabled ? true : false);\n  const {\n    setOctal,\n    octal,\n    setOwnerPerms,\n    setGroupPerms,\n    setOtherPerms,\n    ownerPerms,\n    groupPerms,\n    otherPerms\n  } = React.useContext(ChmodContext);\n\n  const newValue = (negative, perms) => {\n    return {\n      total: negative ? perms.total + value * -1 : perms.total + value\n    };\n  };\n\n  const onChangeHandler = e => {\n    const negative = checked;\n    setChecked(e.target.checked);\n    const perms = getPerms(type);\n    const newVal = newValue(negative, perms);\n    console.log(newVal);\n    setPerms(type, newVal);\n  };\n\n  const getPerms = type => {\n    switch (type) {\n      case \"owner\":\n        return ownerPerms;\n      case \"group\":\n        return groupPerms;\n      case \"other\":\n        return otherPerms;\n      default:\n        throw new Error();\n    }\n  };\n\n  const setPerms = (type, value) => {\n    switch (type) {\n      case \"owner\":\n        setOwnerPerms({ ...ownerPerms, ...value });\n        break;\n      case \"group\":\n        setGroupPerms({ ...groupPerms, ...value });\n        break;\n      case \"other\":\n        setOtherPerms({ ...otherPerms, ...value });\n        break;\n      default:\n        throw new Error();\n    }\n  };\n  return (\n    <li>\n      <label>{name}</label>\n      <input\n        type=\"checkbox\"\n        name={name}\n        checked={checked}\n        onChange={onChangeHandler}\n        value={value}\n      />\n    </li>\n  );\n};\n","import React from \"react\";\nimport { CheckBox } from \"../CheckBox/CheckBox\";\nimport { ChmodContext } from \"../../Context/ChmodContext\";\nimport styles from \"./CheckBoxContainer.module.css\";\n\nexport const CheckBoxContainer = () => {\n  const { ownerPerms, groupPerms, otherPerms } = React.useContext(ChmodContext);\n  const weight = [4, 2, 1];\n  const ownerElements = Object.keys(ownerPerms.rwx).map((key, i) => (\n    <CheckBox\n      name={key}\n      enabled={ownerPerms.rwx[key]}\n      key={i}\n      value={weight[i]}\n      type=\"owner\"\n    />\n  ));\n  const groupElements = Object.keys(groupPerms.rwx).map((key, i) => (\n    <CheckBox\n      name={key}\n      enabled={groupPerms.rwx[key]}\n      key={i}\n      value={weight[i]}\n      type=\"group\"\n    />\n  ));\n  const otherElements = Object.keys(otherPerms.rwx).map((key, i) => (\n    <CheckBox\n      name={key}\n      enabled={otherPerms.rwx[key]}\n      key={i}\n      value={weight[i]}\n      type=\"other\"\n    />\n  ));\n  return (\n    <React.Fragment>\n      <div className=\"row\">\n        <div className=\"col\">\n          <h3>Owner</h3>\n        </div>\n        <div className=\"col\">\n          <h3>Group</h3>\n        </div>\n        <div className=\"col\">\n          <h3>Other</h3>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-sm\">\n          <ul>{ownerElements}</ul>\n        </div>\n        <div className=\"col-sm\">\n          <ul>{groupElements}</ul>\n        </div>\n        <div className=\"col-sm\">\n          <ul>{otherElements}</ul>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n","import React from \"react\";\n\nimport Input from \"./Components/Input/Input\";\nimport { CheckBoxContainer } from \"./Components/CheckBoxContainer/CheckBoxContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <CheckBoxContainer />\n        <div className=\"jumbotron\">\n          <div className=\"row\">\n            <div className=\"col-sm\">\n              <Input name=\"octal\" />\n            </div>\n            <div className=\"col-sm\">\n              <Input name=\"symbolic\" />\n            </div>\n            <div className=\"col-sm\">\n              <Input name=\"symbolicDir\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { ChmodContextProvider } from './Context/ChmodContext';\n\nReactDOM.render(<ChmodContextProvider><App /></ChmodContextProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}